window.jest_html_reporters_callback__({"numFailedTestSuites":6,"numFailedTests":3,"numPassedTestSuites":9,"numPassedTests":66,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":3,"numTodoTests":0,"numTotalTestSuites":15,"numTotalTests":69,"startTime":1709188824163,"success":false,"testResults":[{"numFailingTests":1,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188825834,"runtime":1340,"slow":false,"start":1709188824494},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\test\\converter.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWeightConverter function › should log the correct result when converting ounces to pounds\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'calls')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 62 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 |\u001b[39m     \u001b[90m// Check if console.log was called with the expected arguments\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 64 |\u001b[39m     expect(console\u001b[33m.\u001b[39mlog\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 65 |\u001b[39m     expect(console\u001b[33m.\u001b[39mlog\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls[\u001b[35m0\u001b[39m][\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoBe(expectedLogs[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 66 |\u001b[39m     expect(console\u001b[33m.\u001b[39mlog\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls[\u001b[35m1\u001b[39m][\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoBe(expectedLogs[\u001b[35m1\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 67 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.calls (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/converter.test.js\u001b[39m\u001b[0m\u001b[2m:64:29)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["WeightConverter function"],"duration":10,"failureMessages":[],"fullName":"WeightConverter function should convert ounces to pounds and tons correctly","status":"passed","title":"should convert ounces to pounds and tons correctly"},{"ancestorTitles":["WeightConverter function"],"duration":1,"failureMessages":[],"fullName":"WeightConverter function should convert pounds to ounces and tons correctly","status":"passed","title":"should convert pounds to ounces and tons correctly"},{"ancestorTitles":["WeightConverter function"],"duration":1,"failureMessages":[],"fullName":"WeightConverter function should convert tons to pounds and ounces correctly","status":"passed","title":"should convert tons to pounds and ounces correctly"},{"ancestorTitles":["WeightConverter function"],"duration":0,"failureMessages":[],"fullName":"WeightConverter function should return \"wrong input\" for incorrect measurement","status":"passed","title":"should return \"wrong input\" for incorrect measurement"},{"ancestorTitles":["WeightConverter function"],"duration":2,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'calls')\n    at Object.calls (E:\\8th Semester\\SwV Lab\\Calculator\\test\\converter.test.js:64:29)\n    at Promise.then.completed (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"WeightConverter function should log the correct result when converting ounces to pounds","status":"failed","title":"should log the correct result when converting ounces to pounds"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\test\\advanced.test.js","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    pow is not a function\n\n    \u001b[0m \u001b[90m 3 |\u001b[39m describe(\u001b[32m'pow'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 4 |\u001b[39m     \u001b[36mconst\u001b[39m bvaData \u001b[33m=\u001b[39m [ [ \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m ]\u001b[33m,\u001b[39m [ \u001b[35m4\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1024\u001b[39m ]\u001b[33m,\u001b[39m [ \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m \u001b[35m12\u001b[39m\u001b[33m,\u001b[39m \u001b[35m531441\u001b[39m ]\u001b[33m,\u001b[39m [ \u001b[35m4\u001b[39m\u001b[33m,\u001b[39m \u001b[35m6\u001b[39m\u001b[33m,\u001b[39m \u001b[35m4096\u001b[39m ] ]\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m     describe\u001b[33m.\u001b[39meach(bvaData)(\u001b[32m\"BVA: pow(%i %i), Expected: %i\"\u001b[39m\u001b[33m,\u001b[39m (a\u001b[33m,\u001b[39m b\u001b[33m,\u001b[39m expected) \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 6 |\u001b[39m         test(\u001b[32m`returns ${pow(a, b)}`\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 7 |\u001b[39m             expect(pow(a\u001b[33m,\u001b[39m b))\u001b[33m.\u001b[39mtoBe(expected)\u001b[0m\n    \u001b[0m \u001b[90m 8 |\u001b[39m         })\u001b[0m\n\n      \u001b[2mat each (\u001b[22m\u001b[0m\u001b[36mtest/advanced.test.js\u001b[39m\u001b[0m\u001b[2m:5:14)\u001b[22m\n      \u001b[2mat Object.describe (\u001b[22m\u001b[0m\u001b[36mtest/advanced.test.js\u001b[39m\u001b[0m\u001b[2m:3:1)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox4766850\\test\\advanced.test.js","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    pow is not a function\n\n    \u001b[0m \u001b[90m 4 |\u001b[39m describe(\u001b[32m'pow'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 5 |\u001b[39m     \u001b[36mconst\u001b[39m bvaData \u001b[33m=\u001b[39m [ [ \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m ]\u001b[33m,\u001b[39m [ \u001b[35m4\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1024\u001b[39m ]\u001b[33m,\u001b[39m [ \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m \u001b[35m12\u001b[39m\u001b[33m,\u001b[39m \u001b[35m531441\u001b[39m ]\u001b[33m,\u001b[39m [ \u001b[35m4\u001b[39m\u001b[33m,\u001b[39m \u001b[35m6\u001b[39m\u001b[33m,\u001b[39m \u001b[35m4096\u001b[39m ] ]\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m     describe\u001b[33m.\u001b[39meach(bvaData)(\u001b[32m\"BVA: pow(%i %i), Expected: %i\"\u001b[39m\u001b[33m,\u001b[39m (a\u001b[33m,\u001b[39m b\u001b[33m,\u001b[39m expected) \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 7 |\u001b[39m         test(\u001b[32m`returns ${pow(a, b)}`\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 8 |\u001b[39m             expect(pow(a\u001b[33m,\u001b[39m b))\u001b[33m.\u001b[39mtoBe(expected)\u001b[0m\n    \u001b[0m \u001b[90m 9 |\u001b[39m         })\u001b[0m\n\n      \u001b[2mat each (\u001b[22m\u001b[0m\u001b[36m.stryker-tmp/sandbox4766850/test/advanced.test.js\u001b[39m\u001b[0m\u001b[2m:6:14)\u001b[22m\n      \u001b[2mat Object.describe (\u001b[22m\u001b[0m\u001b[36m.stryker-tmp/sandbox4766850/test/advanced.test.js\u001b[39m\u001b[0m\u001b[2m:4:1)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188825980,"runtime":1430,"slow":false,"start":1709188824550},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox2254846\\test\\isPalindrome.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["isPalindrome function"],"duration":14,"failureMessages":[],"fullName":"isPalindrome function should return true for palindrome numbers","status":"passed","title":"should return true for palindrome numbers"},{"ancestorTitles":["isPalindrome function"],"duration":0,"failureMessages":[],"fullName":"isPalindrome function should return false for non-palindrome numbers","status":"passed","title":"should return false for non-palindrome numbers"},{"ancestorTitles":["isPalindrome function"],"duration":0,"failureMessages":[],"fullName":"isPalindrome function should return false for negative numbers","status":"passed","title":"should return false for negative numbers"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox2254846\\test\\advanced.test.js","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    pow is not a function\n\n    \u001b[0m \u001b[90m 4 |\u001b[39m describe(\u001b[32m'pow'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 5 |\u001b[39m     \u001b[36mconst\u001b[39m bvaData \u001b[33m=\u001b[39m [ [ \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m ]\u001b[33m,\u001b[39m [ \u001b[35m4\u001b[39m\u001b[33m,\u001b[39m \u001b[35m5\u001b[39m\u001b[33m,\u001b[39m \u001b[35m1024\u001b[39m ]\u001b[33m,\u001b[39m [ \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m \u001b[35m12\u001b[39m\u001b[33m,\u001b[39m \u001b[35m531441\u001b[39m ]\u001b[33m,\u001b[39m [ \u001b[35m4\u001b[39m\u001b[33m,\u001b[39m \u001b[35m6\u001b[39m\u001b[33m,\u001b[39m \u001b[35m4096\u001b[39m ] ]\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 6 |\u001b[39m     describe\u001b[33m.\u001b[39meach(bvaData)(\u001b[32m\"BVA: pow(%i %i), Expected: %i\"\u001b[39m\u001b[33m,\u001b[39m (a\u001b[33m,\u001b[39m b\u001b[33m,\u001b[39m expected) \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 7 |\u001b[39m         test(\u001b[32m`returns ${pow(a, b)}`\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n    \u001b[0m \u001b[90m 8 |\u001b[39m             expect(pow(a\u001b[33m,\u001b[39m b))\u001b[33m.\u001b[39mtoBe(expected)\u001b[0m\n    \u001b[0m \u001b[90m 9 |\u001b[39m         })\u001b[0m\n\n      \u001b[2mat each (\u001b[22m\u001b[0m\u001b[36m.stryker-tmp/sandbox2254846/test/advanced.test.js\u001b[39m\u001b[0m\u001b[2m:6:14)\u001b[22m\n      \u001b[2mat Object.describe (\u001b[22m\u001b[0m\u001b[36m.stryker-tmp/sandbox2254846/test/advanced.test.js\u001b[39m\u001b[0m\u001b[2m:4:1)\u001b[22m\n","testResults":[]},{"numFailingTests":1,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188826131,"runtime":1622,"slow":false,"start":1709188824509},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox2254846\\test\\converter.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWeightConverter function › should log the correct result when converting ounces to pounds\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'calls')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 64 |\u001b[39m     \u001b[90m// Check if console.log was called with the expected arguments\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 65 |\u001b[39m     expect(console\u001b[33m.\u001b[39mlog\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 66 |\u001b[39m     expect(console\u001b[33m.\u001b[39mlog\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls[\u001b[35m1\u001b[39m][\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoBe(expectedLogs[\u001b[35m1\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 67 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 68 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.calls (\u001b[22m\u001b[2m\u001b[0m\u001b[36m.stryker-tmp/sandbox2254846/test/converter.test.js\u001b[39m\u001b[0m\u001b[2m:65:29)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["WeightConverter function"],"duration":40,"failureMessages":[],"fullName":"WeightConverter function should convert ounces to pounds and tons correctly","status":"passed","title":"should convert ounces to pounds and tons correctly"},{"ancestorTitles":["WeightConverter function"],"duration":2,"failureMessages":[],"fullName":"WeightConverter function should convert pounds to ounces and tons correctly","status":"passed","title":"should convert pounds to ounces and tons correctly"},{"ancestorTitles":["WeightConverter function"],"duration":1,"failureMessages":[],"fullName":"WeightConverter function should convert tons to pounds and ounces correctly","status":"passed","title":"should convert tons to pounds and ounces correctly"},{"ancestorTitles":["WeightConverter function"],"duration":1,"failureMessages":[],"fullName":"WeightConverter function should return \"wrong input\" for incorrect measurement","status":"passed","title":"should return \"wrong input\" for incorrect measurement"},{"ancestorTitles":["WeightConverter function"],"duration":2,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'calls')\n    at Object.calls (E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox2254846\\test\\converter.test.js:65:29)\n    at Promise.then.completed (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"WeightConverter function should log the correct result when converting ounces to pounds","status":"failed","title":"should log the correct result when converting ounces to pounds"}]},{"numFailingTests":1,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188826149,"runtime":1658,"slow":false,"start":1709188824491},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox4766850\\test\\converter.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mWeightConverter function › should log the correct result when converting ounces to pounds\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'calls')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 64 |\u001b[39m     \u001b[90m// Check if console.log was called with the expected arguments\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 65 |\u001b[39m     expect(console\u001b[33m.\u001b[39mlog\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 66 |\u001b[39m     expect(console\u001b[33m.\u001b[39mlog\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls[\u001b[35m0\u001b[39m][\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoBe(expectedLogs[\u001b[35m0\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 67 |\u001b[39m     expect(console\u001b[33m.\u001b[39mlog\u001b[33m.\u001b[39mmock\u001b[33m.\u001b[39mcalls[\u001b[35m1\u001b[39m][\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoBe(expectedLogs[\u001b[35m1\u001b[39m])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 68 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.calls (\u001b[22m\u001b[2m\u001b[0m\u001b[36m.stryker-tmp/sandbox4766850/test/converter.test.js\u001b[39m\u001b[0m\u001b[2m:65:29)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["WeightConverter function"],"duration":10,"failureMessages":[],"fullName":"WeightConverter function should convert ounces to pounds and tons correctly","status":"passed","title":"should convert ounces to pounds and tons correctly"},{"ancestorTitles":["WeightConverter function"],"duration":1,"failureMessages":[],"fullName":"WeightConverter function should convert pounds to ounces and tons correctly","status":"passed","title":"should convert pounds to ounces and tons correctly"},{"ancestorTitles":["WeightConverter function"],"duration":0,"failureMessages":[],"fullName":"WeightConverter function should convert tons to pounds and ounces correctly","status":"passed","title":"should convert tons to pounds and ounces correctly"},{"ancestorTitles":["WeightConverter function"],"duration":1,"failureMessages":[],"fullName":"WeightConverter function should return \"wrong input\" for incorrect measurement","status":"passed","title":"should return \"wrong input\" for incorrect measurement"},{"ancestorTitles":["WeightConverter function"],"duration":17,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'calls')\n    at Object.calls (E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox4766850\\test\\converter.test.js:65:29)\n    at Promise.then.completed (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"WeightConverter function should log the correct result when converting ounces to pounds","status":"failed","title":"should log the correct result when converting ounces to pounds"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188826184,"runtime":246,"slow":false,"start":1709188825938},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\test\\isPalindrome.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["isPalindrome function"],"duration":27,"failureMessages":[],"fullName":"isPalindrome function should return true for palindrome numbers","status":"passed","title":"should return true for palindrome numbers"},{"ancestorTitles":["isPalindrome function"],"duration":1,"failureMessages":[],"fullName":"isPalindrome function should return false for non-palindrome numbers","status":"passed","title":"should return false for non-palindrome numbers"},{"ancestorTitles":["isPalindrome function"],"duration":9,"failureMessages":[],"fullName":"isPalindrome function should return false for negative numbers","status":"passed","title":"should return false for negative numbers"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188826250,"runtime":233,"slow":false,"start":1709188826017},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox4766850\\test\\basic.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Add","BVA: add(1 , 2), Expected: 3"],"duration":1,"failureMessages":[],"fullName":"Add BVA: add(1 , 2), Expected: 3 returns 1 + 2 = 3","status":"passed","title":"returns 1 + 2 = 3"},{"ancestorTitles":["Add","BVA: add(4 , 5), Expected: 9"],"duration":0,"failureMessages":[],"fullName":"Add BVA: add(4 , 5), Expected: 9 returns 4 + 5 = 9","status":"passed","title":"returns 4 + 5 = 9"},{"ancestorTitles":["Add","BVA: add(3 , 12), Expected: 15"],"duration":0,"failureMessages":[],"fullName":"Add BVA: add(3 , 12), Expected: 15 returns 3 + 12 = 15","status":"passed","title":"returns 3 + 12 = 15"},{"ancestorTitles":["Add","BVA: add(4 , 6), Expected: 10"],"duration":1,"failureMessages":[],"fullName":"Add BVA: add(4 , 6), Expected: 10 returns 4 + 6 = 10","status":"passed","title":"returns 4 + 6 = 10"},{"ancestorTitles":["Add","DT: add(0 , 89), Expected: 89"],"duration":0,"failureMessages":[],"fullName":"Add DT: add(0 , 89), Expected: 89 returns 0 + 89 = 89","status":"passed","title":"returns 0 + 89 = 89"},{"ancestorTitles":["Add","DT: add(-17 , -35), Expected: -52"],"duration":1,"failureMessages":[],"fullName":"Add DT: add(-17 , -35), Expected: -52 returns -17 + -35 = -52","status":"passed","title":"returns -17 + -35 = -52"},{"ancestorTitles":["Add","DT: add(65 , -12), Expected: 53"],"duration":0,"failureMessages":[],"fullName":"Add DT: add(65 , -12), Expected: 53 returns 65 + -12 = 53","status":"passed","title":"returns 65 + -12 = 53"},{"ancestorTitles":["Add","DT: add(-78 , 24), Expected: -54"],"duration":1,"failureMessages":[],"fullName":"Add DT: add(-78 , 24), Expected: -54 returns -78 + 24 = -54","status":"passed","title":"returns -78 + 24 = -54"},{"ancestorTitles":["Add","Subtract"],"duration":0,"failureMessages":[],"fullName":"Add Subtract a = 10, b = 3","status":"passed","title":"a = 10, b = 3"},{"ancestorTitles":["Add","Multiply"],"duration":6,"failureMessages":[],"fullName":"Add Multiply a = 10, b = 3","status":"passed","title":"a = 10, b = 3"},{"ancestorTitles":["Add","Divide"],"duration":1,"failureMessages":[],"fullName":"Add Divide a = 10, b = 2","status":"passed","title":"a = 10, b = 2"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188826262,"runtime":287,"slow":false,"start":1709188825975},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox2254846\\test\\basic.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Add","BVA: add(1 , 2), Expected: 3"],"duration":66,"failureMessages":[],"fullName":"Add BVA: add(1 , 2), Expected: 3 returns 1 + 2 = 3","status":"passed","title":"returns 1 + 2 = 3"},{"ancestorTitles":["Add","BVA: add(4 , 5), Expected: 9"],"duration":0,"failureMessages":[],"fullName":"Add BVA: add(4 , 5), Expected: 9 returns 4 + 5 = 9","status":"passed","title":"returns 4 + 5 = 9"},{"ancestorTitles":["Add","BVA: add(3 , 12), Expected: 15"],"duration":2,"failureMessages":[],"fullName":"Add BVA: add(3 , 12), Expected: 15 returns 3 + 12 = 15","status":"passed","title":"returns 3 + 12 = 15"},{"ancestorTitles":["Add","BVA: add(4 , 6), Expected: 10"],"duration":1,"failureMessages":[],"fullName":"Add BVA: add(4 , 6), Expected: 10 returns 4 + 6 = 10","status":"passed","title":"returns 4 + 6 = 10"},{"ancestorTitles":["Add","DT: add(0 , 89), Expected: 89"],"duration":1,"failureMessages":[],"fullName":"Add DT: add(0 , 89), Expected: 89 returns 0 + 89 = 89","status":"passed","title":"returns 0 + 89 = 89"},{"ancestorTitles":["Add","DT: add(-17 , -35), Expected: -52"],"duration":0,"failureMessages":[],"fullName":"Add DT: add(-17 , -35), Expected: -52 returns -17 + -35 = -52","status":"passed","title":"returns -17 + -35 = -52"},{"ancestorTitles":["Add","DT: add(65 , -12), Expected: 53"],"duration":0,"failureMessages":[],"fullName":"Add DT: add(65 , -12), Expected: 53 returns 65 + -12 = 53","status":"passed","title":"returns 65 + -12 = 53"},{"ancestorTitles":["Add","DT: add(-78 , 24), Expected: -54"],"duration":0,"failureMessages":[],"fullName":"Add DT: add(-78 , 24), Expected: -54 returns -78 + 24 = -54","status":"passed","title":"returns -78 + 24 = -54"},{"ancestorTitles":["Add","Subtract"],"duration":0,"failureMessages":[],"fullName":"Add Subtract a = 10, b = 3","status":"passed","title":"a = 10, b = 3"},{"ancestorTitles":["Add","Multiply"],"duration":1,"failureMessages":[],"fullName":"Add Multiply a = 10, b = 3","status":"passed","title":"a = 10, b = 3"},{"ancestorTitles":["Add","Divide"],"duration":0,"failureMessages":[],"fullName":"Add Divide a = 10, b = 2","status":"passed","title":"a = 10, b = 2"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188826266,"runtime":374,"slow":false,"start":1709188825892},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox4766850\\test\\isPalindrome.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["isPalindrome function"],"duration":2,"failureMessages":[],"fullName":"isPalindrome function should return true for palindrome numbers","status":"passed","title":"should return true for palindrome numbers"},{"ancestorTitles":["isPalindrome function"],"duration":1,"failureMessages":[],"fullName":"isPalindrome function should return false for non-palindrome numbers","status":"passed","title":"should return false for non-palindrome numbers"},{"ancestorTitles":["isPalindrome function"],"duration":1,"failureMessages":[],"fullName":"isPalindrome function should return false for negative numbers","status":"passed","title":"should return false for negative numbers"}]},{"numFailingTests":0,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188826361,"runtime":257,"slow":false,"start":1709188826104},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\test\\basic.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["Add","BVA: add(1 , 2), Expected: 3"],"duration":8,"failureMessages":[],"fullName":"Add BVA: add(1 , 2), Expected: 3 returns 1 + 2 = 3","status":"passed","title":"returns 1 + 2 = 3"},{"ancestorTitles":["Add","BVA: add(4 , 5), Expected: 9"],"duration":1,"failureMessages":[],"fullName":"Add BVA: add(4 , 5), Expected: 9 returns 4 + 5 = 9","status":"passed","title":"returns 4 + 5 = 9"},{"ancestorTitles":["Add","BVA: add(3 , 12), Expected: 15"],"duration":0,"failureMessages":[],"fullName":"Add BVA: add(3 , 12), Expected: 15 returns 3 + 12 = 15","status":"passed","title":"returns 3 + 12 = 15"},{"ancestorTitles":["Add","BVA: add(4 , 6), Expected: 10"],"duration":0,"failureMessages":[],"fullName":"Add BVA: add(4 , 6), Expected: 10 returns 4 + 6 = 10","status":"passed","title":"returns 4 + 6 = 10"},{"ancestorTitles":["Add","DT: add(0 , 89), Expected: 89"],"duration":1,"failureMessages":[],"fullName":"Add DT: add(0 , 89), Expected: 89 returns 0 + 89 = 89","status":"passed","title":"returns 0 + 89 = 89"},{"ancestorTitles":["Add","DT: add(-17 , -35), Expected: -52"],"duration":0,"failureMessages":[],"fullName":"Add DT: add(-17 , -35), Expected: -52 returns -17 + -35 = -52","status":"passed","title":"returns -17 + -35 = -52"},{"ancestorTitles":["Add","DT: add(65 , -12), Expected: 53"],"duration":0,"failureMessages":[],"fullName":"Add DT: add(65 , -12), Expected: 53 returns 65 + -12 = 53","status":"passed","title":"returns 65 + -12 = 53"},{"ancestorTitles":["Add","DT: add(-78 , 24), Expected: -54"],"duration":0,"failureMessages":[],"fullName":"Add DT: add(-78 , 24), Expected: -54 returns -78 + 24 = -54","status":"passed","title":"returns -78 + 24 = -54"},{"ancestorTitles":["Add","Subtract"],"duration":0,"failureMessages":[],"fullName":"Add Subtract a = 10, b = 3","status":"passed","title":"a = 10, b = 3"},{"ancestorTitles":["Add","Multiply"],"duration":1,"failureMessages":[],"fullName":"Add Multiply a = 10, b = 3","status":"passed","title":"a = 10, b = 3"},{"ancestorTitles":["Add","Divide"],"duration":0,"failureMessages":[],"fullName":"Add Divide a = 10, b = 2","status":"passed","title":"a = 10, b = 2"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188826366,"runtime":149,"slow":false,"start":1709188826217},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\test\\mergeSort.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["mergeSort function"],"duration":2,"failureMessages":[],"fullName":"mergeSort function should correctly sort an array of numbers","status":"passed","title":"should correctly sort an array of numbers"},{"ancestorTitles":["mergeSort function"],"duration":0,"failureMessages":[],"fullName":"mergeSort function should return an empty array if the input array is empty","status":"passed","title":"should return an empty array if the input array is empty"},{"ancestorTitles":["mergeSort function"],"duration":0,"failureMessages":[],"fullName":"mergeSort function should return the input array if it contains only one element","status":"passed","title":"should return the input array if it contains only one element"},{"ancestorTitles":["mergeSort function"],"duration":1,"failureMessages":[],"fullName":"mergeSort function should correctly sort an array with duplicate numbers","status":"passed","title":"should correctly sort an array with duplicate numbers"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188826424,"runtime":252,"slow":false,"start":1709188826172},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox2254846\\test\\mergeSort.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["mergeSort function"],"duration":2,"failureMessages":[],"fullName":"mergeSort function should correctly sort an array of numbers","status":"passed","title":"should correctly sort an array of numbers"},{"ancestorTitles":["mergeSort function"],"duration":0,"failureMessages":[],"fullName":"mergeSort function should return an empty array if the input array is empty","status":"passed","title":"should return an empty array if the input array is empty"},{"ancestorTitles":["mergeSort function"],"duration":1,"failureMessages":[],"fullName":"mergeSort function should return the input array if it contains only one element","status":"passed","title":"should return the input array if it contains only one element"},{"ancestorTitles":["mergeSort function"],"duration":0,"failureMessages":[],"fullName":"mergeSort function should correctly sort an array with duplicate numbers","status":"passed","title":"should correctly sort an array with duplicate numbers"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1709188826453,"runtime":262,"slow":false,"start":1709188826191},"testFilePath":"E:\\8th Semester\\SwV Lab\\Calculator\\.stryker-tmp\\sandbox4766850\\test\\mergeSort.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["mergeSort function"],"duration":2,"failureMessages":[],"fullName":"mergeSort function should correctly sort an array of numbers","status":"passed","title":"should correctly sort an array of numbers"},{"ancestorTitles":["mergeSort function"],"duration":1,"failureMessages":[],"fullName":"mergeSort function should return an empty array if the input array is empty","status":"passed","title":"should return an empty array if the input array is empty"},{"ancestorTitles":["mergeSort function"],"duration":36,"failureMessages":[],"fullName":"mergeSort function should return the input array if it contains only one element","status":"passed","title":"should return the input array if it contains only one element"},{"ancestorTitles":["mergeSort function"],"duration":1,"failureMessages":[],"fullName":"mergeSort function should correctly sort an array with duplicate numbers","status":"passed","title":"should correctly sort an array with duplicate numbers"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"E:\\8th Semester\\SwV Lab\\Calculator\\code-coverage-report","coverageProvider":"babel","coverageReporters":["lcov"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\jest-html-reporters\\index.js",{}]],"rootDir":"E:\\8th Semester\\SwV Lab\\Calculator","runTestsByPath":false,"seed":524725236,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"E:\\8th Semester\\SwV Lab\\Calculator\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"code-coverage-report\\lcov-report\\index.html"},"endTime":1709188826502,"_reporterOptions":{"publicPath":"E:\\8th Semester\\SwV Lab\\Calculator","filename":"jest_html_reporters.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})